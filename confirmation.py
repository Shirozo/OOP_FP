# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI's/confirmation.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtSql import QSqlQuery
from databaseConn import createConnection
from Message import Ui_MessageForm
from signalConnection import SignalConnector


class Ui_ConfirmDialog(object):
    def removeEntry(self, id : int) -> None:
        """
        Remove a product entry from the database based on its ID.

        Parameters:
        - id (int): The ID of the product entry to be removed.

        Usage:
        ```
        instance_of_your_class.removeEntry(123)
        ```

        This method attempts to remove a product entry from the 'products' table in the database based on the provided ID.

        Parameters:
        - `id`: The ID of the product entry to be removed.

        If the entry with the given ID exists, it is deleted. If not, an appropriate message is set.
        """
        message_code = "Error"              #Set the default message code
        message = "An Error Occured"        #Set the default message
        try:                                #Handle any runtime error
            db = createConnection()            #Create database connection 
            db.open()                           #Open the database connection
            query = QSqlQuery()                 #Create QSqlQuery instance to query removal
            checker = QSqlQuery()               #Create QSqlQuery instance for checking the product exist 

            checker_statement = """SELECT COUNT(*) 
            FROM products WHERE id = :id"""         #SQL statement to checker query
            checker.prepare(checker_statement)      #Prepare the statement for value binding
            checker.bindValue(":id", id)            #Bind the ID to the SQL statement
            checker_status = checker.exec_()        #Execute the Query

            if checker_status:                      #If the query succedd, then
                checker.next()                          #Move to the next row
                count = checker.value(0)                #Get the count of the product with that id
                if count == 1:                              #If the count is only 1, then
                    statement = """DELETE FROM products     
                    WHERE id = :id"""                           #SQL statement for deleting the value
                    query.prepare(statement)                    #Prepare the query for value binding
                    query.bindValue(":id", id)                  #Bind the ID
                    status = query.exec_()                      #Execute the query
                    
                    if status:                                  #If the query succeed ,then
                        message = "Deleted Successfully!"           #Set the message that the data is removed
                        message_code = "Success"                    #Set the code to  Success
                        self.signal.clickedOk.emit()                #Singal the main.py to call removeTableEntry function    
                else:                                       #If the count is not equal to 1, then
                    message = "Data Don't Exist"                #Set the message to Data Don't Exist
            else:                                   #If the checker query failed
                message = "Data Don't Exist"            #Set the message to Data Don't Exist
        except Exception as e:              #Get the error messsage
            message = str(e)[:13] + "..."       #Set the meesage to whatever the error message is

        db.close()  #Close the database connection
        self.messageFedback(message, message_code)      #Show the message dialog
    
    def messageFedback(self, msg : str, code : str) -> None:
        self.erorr = QtWidgets.QDialog()
        erorr_modal = Ui_MessageForm(msg, code)
        erorr_modal.setupUi(self.erorr)
        self.ConfirmDialog.close()
        self.erorr.exec_()
    
    def setupUi(self, ConfirmDialog):
        ConfirmDialog.setObjectName("ConfirmDialog")
        ConfirmDialog.setFixedSize(274, 120)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(ConfirmDialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.ConfirmWidget = QtWidgets.QWidget(ConfirmDialog)
        self.ConfirmWidget.setObjectName("ConfirmWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.ConfirmWidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.ConfirmLabel = QtWidgets.QLabel(self.ConfirmWidget)
        self.ConfirmLabel.setObjectName("ConfirmLabel")
        self.verticalLayout.addWidget(self.ConfirmLabel, 0, QtCore.Qt.AlignHCenter)
        self.ConfirmSeparator = QtWidgets.QFrame(self.ConfirmWidget)
        self.ConfirmSeparator.setFrameShape(QtWidgets.QFrame.HLine)
        self.ConfirmSeparator.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.ConfirmSeparator.setObjectName("ConfirmSeparator")
        self.verticalLayout.addWidget(self.ConfirmSeparator)
        self.ConfirmButtonWidget = QtWidgets.QWidget(self.ConfirmWidget)
        self.ConfirmButtonWidget.setObjectName("ConfirmButtonWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.ConfirmButtonWidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.ConfirmNoButton = QtWidgets.QPushButton(self.ConfirmButtonWidget)
        self.ConfirmNoButton.setObjectName("ConfirmNoButton")
        self.horizontalLayout.addWidget(self.ConfirmNoButton, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.ConfirmYesButton = QtWidgets.QPushButton(self.ConfirmButtonWidget)
        self.ConfirmYesButton.setObjectName("ConfirmYesButton")
        self.horizontalLayout.addWidget(self.ConfirmYesButton, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.verticalLayout.addWidget(self.ConfirmButtonWidget)
        self.verticalLayout_2.addWidget(self.ConfirmWidget)

        self.retranslateUi(ConfirmDialog)
        self.ConfirmNoButton.clicked.connect(ConfirmDialog.close)
        QtCore.QMetaObject.connectSlotsByName(ConfirmDialog)
        self.ConfirmDialog = ConfirmDialog

        self.signal = SignalConnector()


    def retranslateUi(self, ConfirmDialog):
        _translate = QtCore.QCoreApplication.translate
        ConfirmDialog.setWindowTitle(_translate("ConfirmDialog", "Dialog"))
        self.ConfirmLabel.setText(_translate("ConfirmDialog", "Are you sure you want to remove?"))
        self.ConfirmNoButton.setText(_translate("ConfirmDialog", "No"))
        self.ConfirmYesButton.setText(_translate("ConfirmDialog", "Yes"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ConfirmDialog = QtWidgets.QDialog()
    ui = Ui_ConfirmDialog()
    ui.setupUi(ConfirmDialog)
    ConfirmDialog.show()
    sys.exit(app.exec_())
